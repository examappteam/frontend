{"ast":null,"code":"\"use strict\";\n/**\n * @fileoverview In-Dialog Request Sender\n */\n\n/**\n * @augments SIP.Dialog\n * @class Class creating an In-dialog request sender.\n * @param {SIP.Dialog} dialog\n * @param {Object} applicant\n * @param {SIP.OutgoingRequest} request\n */\n\n/**\n * @fileoverview in-Dialog Request Sender\n */\n\nmodule.exports = function (SIP) {\n  var RequestSender;\n\n  RequestSender = function RequestSender(dialog, applicant, request) {\n    this.dialog = dialog;\n    this.applicant = applicant;\n    this.request = request; // RFC3261 14.1 Modifying an Existing Session. UAC Behavior.\n\n    this.reattempt = false;\n    this.reattemptTimer = null;\n  };\n\n  RequestSender.prototype = {\n    send: function send() {\n      var self = this,\n          request_sender = new SIP.RequestSender(this, this.dialog.owner.ua);\n      request_sender.send(); // RFC3261 14.2 Modifying an Existing Session -UAC BEHAVIOR-\n\n      if (this.request.method === SIP.C.INVITE && request_sender.clientTransaction.state !== SIP.Transactions.C.STATUS_TERMINATED) {\n        this.dialog.uac_pending_reply = true;\n        request_sender.clientTransaction.on('stateChanged', function stateChanged() {\n          if (this.state === SIP.Transactions.C.STATUS_ACCEPTED || this.state === SIP.Transactions.C.STATUS_COMPLETED || this.state === SIP.Transactions.C.STATUS_TERMINATED) {\n            this.removeListener('stateChanged', stateChanged);\n            self.dialog.uac_pending_reply = false;\n\n            if (self.dialog.uas_pending_reply === false) {\n              self.dialog.owner.onReadyToReinvite();\n            }\n          }\n        });\n      }\n    },\n    onRequestTimeout: function onRequestTimeout() {\n      this.applicant.onRequestTimeout();\n    },\n    onTransportError: function onTransportError() {\n      this.applicant.onTransportError();\n    },\n    receiveResponse: function receiveResponse(response) {\n      var self = this; // RFC3261 12.2.1.2 408 or 481 is received for a request within a dialog.\n\n      if (response.status_code === 408 || response.status_code === 481) {\n        this.applicant.onDialogError(response);\n      } else if (response.method === SIP.C.INVITE && response.status_code === 491) {\n        if (this.reattempt) {\n          this.applicant.receiveResponse(response);\n        } else {\n          this.request.cseq.value = this.dialog.local_seqnum += 1;\n          this.reattemptTimer = SIP.Timers.setTimeout(function () {\n            if (self.applicant.owner.status !== SIP.Session.C.STATUS_TERMINATED) {\n              self.reattempt = true;\n              self.request_sender.send();\n            }\n          }, this.getReattemptTimeout());\n        }\n      } else {\n        this.applicant.receiveResponse(response);\n      }\n    }\n  };\n  return RequestSender;\n};","map":null,"metadata":{},"sourceType":"script"}