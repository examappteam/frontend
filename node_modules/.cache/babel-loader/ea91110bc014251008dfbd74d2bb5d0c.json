{"ast":null,"code":"\"use strict\";\n/**\n * @fileoverview MediaHandler\n */\n\n/* MediaHandler\n * @class PeerConnection helper Class.\n * @param {SIP.Session} session\n * @param {Object} [options]\n */\n\nmodule.exports = function (EventEmitter) {\n  var MediaHandler = function MediaHandler(session, options) {\n    // keep jshint happy\n    session = session;\n    options = options;\n  };\n\n  MediaHandler.prototype = Object.create(EventEmitter.prototype, {\n    isReady: {\n      value: function isReady() {}\n    },\n    close: {\n      value: function close() {}\n    },\n\n    /**\n     * @param {Object} [mediaHint] A custom object describing the media to be used during this session.\n     */\n    getDescription: {\n      value: function getDescription(mediaHint) {\n        // keep jshint happy\n        mediaHint = mediaHint;\n      }\n    },\n\n    /**\n     * Check if a SIP message contains a session description.\n     * @param {SIP.SIPMessage} message\n     * @returns {boolean}\n     */\n    hasDescription: {\n      value: function hasDescription(message) {\n        // keep jshint happy\n        message = message;\n      }\n    },\n\n    /**\n     * Set the session description contained in a SIP message.\n     * @param {SIP.SIPMessage} message\n     * @returns {Promise}\n     */\n    setDescription: {\n      value: function setDescription(message) {\n        // keep jshint happy\n        message = message;\n      }\n    }\n  });\n  return MediaHandler;\n};","map":null,"metadata":{},"sourceType":"script"}