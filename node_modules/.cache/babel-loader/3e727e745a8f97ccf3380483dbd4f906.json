{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TrackSignaling = require('./track');\n/**\n * A {@link LocalTrackPublication} implementation\n * @extends TrackSignaling\n * @property {?Error} error - non-null if publication failed\n * @property {Track.ID} id\n */\n\n\nvar LocalTrackPublicationSignaling = function (_TrackSignaling) {\n  _inherits(LocalTrackPublicationSignaling, _TrackSignaling);\n  /**\n   * Construct a {@link LocalTrackPublicationSignaling}.\n   * @param {DataTrackSender|MediaTrackSender} trackSender\n   * @param {string} name\n   */\n\n\n  function LocalTrackPublicationSignaling(trackSender, name) {\n    _classCallCheck(this, LocalTrackPublicationSignaling);\n\n    var enabled = trackSender.kind === 'data' ? true : trackSender.track.enabled;\n\n    var _this = _possibleConstructorReturn(this, (LocalTrackPublicationSignaling.__proto__ || Object.getPrototypeOf(LocalTrackPublicationSignaling)).call(this, name, trackSender.kind, enabled));\n\n    _this.setTrackTransceiver(trackSender);\n\n    Object.defineProperties(_this, {\n      _error: {\n        value: null,\n        writable: true\n      },\n      error: {\n        enumerable: true,\n        get: function get() {\n          return this._error;\n        }\n      },\n      id: {\n        enumerable: true,\n        value: trackSender.id\n      }\n    });\n    return _this;\n  }\n  /**\n   * Rejects the SID's deferred promise with the given Error.\n   * @param {Error} error\n   * @returns {this}\n   */\n\n\n  _createClass(LocalTrackPublicationSignaling, [{\n    key: 'publishFailed',\n    value: function publishFailed(error) {\n      if (setError(this, error)) {\n        this.emit('updated');\n      }\n\n      return this;\n    }\n  }, {\n    key: 'setSid',\n    value: function setSid(sid) {\n      if (this._error) {\n        return this;\n      }\n\n      return _get(LocalTrackPublicationSignaling.prototype.__proto__ || Object.getPrototypeOf(LocalTrackPublicationSignaling.prototype), 'setSid', this).call(this, sid);\n    }\n  }]);\n\n  return LocalTrackPublicationSignaling;\n}(TrackSignaling);\n/**\n * @param {LocalTrackPublication} publication\n * @param {Error} error\n * @returns {boolean} updated\n */\n\n\nfunction setError(publication, error) {\n  if (publication._sid !== null || publication._error) {\n    return false;\n  }\n\n  publication._error = error;\n  return true;\n}\n\nmodule.exports = LocalTrackPublicationSignaling;","map":null,"metadata":{},"sourceType":"script"}