{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Filter = function () {\n  function Filter(options) {\n    _classCallCheck(this, Filter);\n\n    options = Object.assign({\n      getKey: function defaultGetKey(a) {\n        return a;\n      },\n      getValue: function defaultGetValue(a) {\n        return a;\n      },\n      isLessThanOrEqualTo: function defaultIsLessThanOrEqualTo(a, b) {\n        return a <= b;\n      }\n    }, options);\n    Object.defineProperties(this, {\n      _getKey: {\n        value: options.getKey\n      },\n      _getValue: {\n        value: options.getValue\n      },\n      _isLessThanOrEqualTo: {\n        value: options.isLessThanOrEqualTo\n      },\n      _map: {\n        value: new Map()\n      }\n    });\n  }\n\n  _createClass(Filter, [{\n    key: 'toMap',\n    value: function toMap() {\n      return new Map(this._map);\n    }\n  }, {\n    key: 'updateAndFilter',\n    value: function updateAndFilter(entries) {\n      return entries.filter(this.update, this);\n    }\n  }, {\n    key: 'update',\n    value: function update(entry) {\n      var key = this._getKey(entry);\n\n      var value = this._getValue(entry);\n\n      if (this._map.has(key) && this._isLessThanOrEqualTo(value, this._map.get(key))) {\n        return false;\n      }\n\n      this._map.set(key, value);\n\n      return true;\n    }\n  }]);\n\n  return Filter;\n}();\n\nmodule.exports = Filter;","map":null,"metadata":{},"sourceType":"script"}